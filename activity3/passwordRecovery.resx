<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="changeType.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAABGdBTUEAALGPC/xhBQAAFpBJREFUeF7t
        3Qe4JlV9x/FNFFjQpayuSEcNRUBQqhQNVUFAV0BECO1RF6QjRVBAhNgWVCTSFSVRBIKUVYSwICAgBKIi
        AtIMvUdcpEiRJL9fFgKs/3t5773nnJkz8/08z/d5fBTZvfPOzH1n5sw54wAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANA7f6P+Vr1GzabmUHOq16l51RvU61/47/y/+Z/xP+v/j/+/
        AJDNRLWoWkVto/ZVX1M/UBep36h71GPqGfWc+pO6V12vLlY/VF9X+6tt1XvVImqCAoBRW1xtpk5S16rf
        qzvV/WqGelL9zyjzCe0P6j7lf+/N6kJ1sNpYLab4FgZgSL5Um09tqPwt6NfqWRWdcHL238p/9pHqfWqS
        4uQF4P8srHZSvqwby7emXD2uLlAfV29WAHpmSbWfmq4eVs+r6GTRpv6iHlFXqb3V2xSADvOTuz2U7xtF
        J4Wauknto8YrAB3iIQW7Kd8wjw7+mntQ7ar8MwKomMdD+f6Ub2JHB3uXukNtpeZWACribxvrqctVE0/6
        msr3uc5TH1A8WQQqsJq6REUHdJ+apt6lALTQm5QHeXocU3QA9zEP0zhe+RUhAC3xVuVxVNFBSzNfC/J4
        MwANW1n5Hb7oQKWX8k35FRSAhuyu/qiiA5T+Oo+a31kBKMhTuByrnlbRgUlD51kk/JI1M0QABfgF5R+r
        6GCkwTtNeeQ/gEw8ZOE/VXQA0si7Xa2uACQ2WT2kogOPRp8nGfyEApDIGsqjuKMDjsaeZ6uYogCMkacR
        /i8VHWiULv9CWFcBGKUFlKcRjg4wSt9dynPWAxghL/pwtYoOLMqXXxhnZlNgBLwc1pkqOqAof2crZnsA
        BuQFGHiJudm8FBmAV7GFqmUOK59UPdresyJ4eMCjynPE+91GjxfzMAz/d/7f/M/456rlROyb8B9UAIbg
        4Qt+3y06gNqUHwT4kvVA9VH192oZ5Xs/cykvGWZe9Xl+9Xblp51ePPVQ9X3ldQmjf3eb8snWnwmAWfig
        vk5FB07T+QXry9SX1UbKc2/5ZDQang3VC0f4ROaTmP+dV6q2jjPzytX+eQG8wDd4z1XRAdNUvnS7VR2t
        POVwzoPWJy+v+Oyl79s4jON85W+OAMTLVUUHSlP5/tP26sVLu5Jeq3zpeLeK/m5N5cU8gN5bSLVlTqsb
        lJcDa8MsBrMrr6H4OxX9XUvnlYf8WQG99hkVHSAle0z5cmxx1TZe4flL6s8q+ruX7HAF9Nayyjd1o4Oj
        VJ46eEXVdmurpheC9VPDSQropRNVdGCU6lTl9xVrsZg6XUU/S6n8TRTonaVUU7MweLBnrdMEe3roI5QH
        okY/W+48xfISCuiVs1R0QORuhtpE1W5r1dQJ/9uqiSeoQCPWV9GBkDs/BfR9s67wAqnXqOhnzZmf6q6l
        gM7zQdbEIhI+yLp0snrRoqqJNwTOUUDnba48JW90EOTK7yf6Xb+u8qR7pZ8g+l4WM5Si8/xOXnQA5Mrv
        6H1YdZ1fHyo9y8WFinmz0FmLqNI3ivdUfeATxyGq5LdXnyD9mQKd5JNHyVkJzlB9eprlmVqnqWhb5MrT
        6wCd428AvoSIdvocedaDPi7H7gcLXiA12iY5Ok5xWYjO8fQsT6lop8/RQaqv/E022iY5ukkxkBSds6GK
        dvgcXaX6vPLLG1WpVbI9b9jHFNAZvmTw6yTRDp+jrVTfef6qaNvk6AQFdIYHN3o+pWhnT92/qz7eu5qV
        b8CXGlDqP8d/HtAJm6oSq8X4kb7nXMdMU1SJsVleFWg1BXTCVBXt6KnzqsV4ydxquoq2Veq+qoBOuFRF
        O3nqdlF4Jc9MEW2r1PmykBkcUD3PA36XinbylHkmBk8njFeaqJ5Q0TZLmecYm1cBVdtOlVhkgjmaYl6F
        52wVbbPUraqAqnmRiRKzY26pENtBRdssde9XQNWOUtHOnbJnFJeDQ/MgWq8MFG27lHk9RaBavkQ7TUU7
        d8rOU6NdOr4vrlbRtkvZgQqolgcT/kxFO3fKPqUwvBJDS/xtmvuIqNZsyi/HRjt3qjwwcjmF4fl9v9yX
        hV42zS+5A1WaQz2iop07VX4C6aWvMDxPo3yLirZhqi5Rb1FAlbzgRO4l1j2DqR/dY3g+qf9CRdswVf7l
        sZICqjS/yj3DqAelMoHcYPxwItqGqfK7nOspoEpLq9wvPXsWCAzmByrahinrw4If6Kh1VO4T1sUKgzlG
        RdswZdsroEr+bZv7hPWvCoM5TEXbMGV7K6BKfpSe+4R1isJg/JpUtA1TdrACquRVnqOdOmVnKgzmiyra
        hinbRwFV8lLm0U6dMo+kx2COVdE2TJlnOQWqtILKfUnoieMwGI9Ej7ZhylhYFdXy4hO5T1geh4XB/FRF
        2zBlzKmPas2jPPVLtGOnyq/+zK4wPA/i9XqN0TZMlT+LNRVQJb9LOENFO3eqvGLLfArDe4/K/S6hp7Dh
        RXRUy9987lbRzp0qv6vIC7ev7iPqYRVtw1R5KuYFFVAlv5R8rYp27lT5HtlmCsM7QEXbL2XHK6Bansxt
        mop27pR5qXTPvYWhnauibZcyj6QHquVZFE5S0c6dMl92TlKI+ZvuoyradinbXQFVK/H+mttYIeYpX3JP
        8+O2VkDVtlF+khft4Cn7msJf82X5ySraZqlbQwFVW1bdq6IdPGW+ue/lrPBKXo35IRVts5Q9p5jPHZ1Q
        YokpL8f+IYVXKvECuvul8ipJQPV8uRbt5Kk7X+ElHrj7IxVtq5R5aMmhCugEz9rwuIp29pT5wFldYSY/
        iHhaRdsqZV58wi+6A52wgLpSRTt76i5TLOY5U6ltfr1iIRB0SqnhDc7f6PpuE+Ub4dH2SZ3n2QI6ZS0V
        7ew5ukhNUH1VYsXtF3tSbaqATvGiqn6SF+30qfPy9X2eSM5j36LtkiMvzrqQAjqnxARyL3ajGq/6Zkn1
        WxVtkxx5nnigk7xmXan7Ks4nyD4tY+9xUF72LNoWuVpbAZ3kKZNzz8k0a148tC9KLDLx8h5TvtQHOut7
        Ktr5c+WXfvuw9NROKvr5c8aakOi896oSg0hfnr8JdHmow2T1vIp+9lz5hXbfLwM6zfdZSsyRNWsejb2S
        6hr/TKWevr68oxXQC56DvcT8TLN2m/KAyq7YQDVxsnpAraiA3viOig6G3Plg207V7oOqxHuCUV9WQK94
        nbynVHRAlKjW2QX8zt4RKvqZSuT7j/7sgN6ZqqKDolTnqDeoWvydKjFdzHAdrIBeWlx5RHp0YJTqcvUO
        1ebZBvx3W0flXrn51bpPzamA3tpPRQdHyTz63mOKfAJtGz+gOFWVHrYwa55rjFVx0Huec/xOFR0kpfM9
        tW8pf+Nq2vLKwz9KLM81SNeomi6fgWy8jLqXnI8OlCbyCfRw5UUtSs5T7vcePRjzEHWPiv5uTeW54QG8
        oKlhDsPlMU5nKi+F72+CucyjtlT+s5oaqjBcfioJ4GUmqhLLqY8m37/x5eIVyk/J1lT++46WXxj2TfQv
        qZ8rX/b5z4j+7KbzSRRAYGl1h4oOnDbly7Xp6gTl8VxTlC9rP6A83YpPaM7/2UuP7aj2Up47yt8kL1AP
        qujf3aa81qNn2AAwBK9609ZvG4Pmv3/TT/XGml8YZyVnYAC7qSbeNaSZ+WTre2oABuR7RdHBRHnzt0Mv
        fAtgBLy24NkqOqgoX35diSXngVHwayC+8RsdWJS+q9VYnn4CvbeKukVFBxily08tF1QAxsiT7nnG0OhA
        o7HnhUHWVwAS8QyXfNNKn19DWkYBSMwzF5ylogOPRt7P1AIKQCYT1FEqOgBpsDx04Xg1mwJQwCdVyVWk
        u5K32ScUgMK8EENb5tKqoVtVl1YNAqrzTtX0NMs1dKVaWQFomO9rna6iA5XGjZummIsdaJE5lNcbvFlF
        B20f87bw/ao2L7AB9JqHPvjlXS+YGh3EfegR5ckBvSwYgAosrI5Vz6rooO5ifgJ4jGKhU6BSvinvWT7b
        tMhF6rwa88lqCcXlH1C52dUGyoumdmns1jPqPMVQBaCD/O3jo+o2FZ0Aauo6NVkB6DhPUOf5yr2AhN+n
        8/zl0UmhTfnblFft+YJ6j/K3RgA9M0mtqw5TlyjPC9WG+eT9d7hfXag+r3xJy4vKAF7BKy/vobwU1wxV
        egUfr1HoJcT2Vv67AMBAPDr8rcrrC26jDlAeNuCR4/ep0dzA9zCLG9T56ji1j9pC+RLV46bGKwBIYm61
        kPKir+9WXjx1B7WfmqpOUz95If/nbyqf6Dy7hBdV9QKry6pFlBfaAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ANARs6l5lOeK8pzmq6qN1EeUZxfdVk1Rn1Z+CfkQdXhH8mR+n1N7Kf+MfgnbP7dXxN5Y+eXspdSblV/a
        9rYCUJCnOfake551c2d1ovqV8jxSpeeuqiFvkz8oz2f/T8qzRngF6ImK2SKAhOZVK6nt1TfUxep29Uf1
        lGrDzKC19bzytvMJ/m7liQq/oj6mllesugMMyJctyylfxh2pfqpuUdGBR2n7k7pRna18AttJrab8SwPA
        y/j+04HqVhUdTNRcN6n91YIK6K35lL9J+TKPS7v258Va/01trfzZAZ33WuXpgfdV16gur8bc1Z5WVyt/
        6/J8914yDeicd6jvKi/CEB0IVF9ez/E76m0KqJ7H/XxY+bKPE1V387cu36z3+DegOn6ytJXyU74nVbST
        U/fyk8Zz1ebKg3mBVvM3qi3VL1S0Q1M/8mDVS5VH3XttR6BVPNjQv1UZlkCz5rFdflUIaAWPRD9VcelH
        Q+V7XN9WyyigER6isIe6X0U7KdGseV/xCtmvU0AxkxWXfzTablabKiCrRdQ56jkV7YhEg+ZbCP+iPPgU
        SG4N9TsV7XxEo81vPKylgCT86sUX1TMq2uGIxprfJfVEhMzPhTFZWl2imBiPSnSGersCRmw95Zuj0Y5F
        lKvfqHUUMLDdFd+qqKk8K+qOChiWx8dMVdFORFQy39c6WjF9DUJelOAUFe08RE11lpqggP+3sLpORTsM
        UdP9h/IvVGDc+oqFHqjt+QGQlydDj3lpJy/1FO0gteaJAj0T5kPqHnWb+q3yAMXLlOfoOrMD+VLpx8rT
        uPhn88/on9Wfp392L4XWtSmoH1D+BYse8lxFtS/+4KdJPkCnq9PUt9RnlZ8weViGp+71pcTsqus8F5kX
        h/CrLh457lWgvS28eKpPcD9XM1S0HWvKMz9sptAjng3Ui2lGO0Tb8w7r9xk9U4SXpvfJyDNHOD9RYiHQ
        l3jkuLeLt5HzCe1dahflKY39LSzaxm3Pi8BuodAD71N3qWhHaGN+JehO5Us5jw9bRTH97th50dpV1aeV
        Ly3vVTXNu/+IWlGhw/yNpJaTle9DTVO+tOEJUX6eieOT6jxVy6WjbwewwGtH+X6OV/GNPvi25N/wnr10
        XcXYm+bMpd6v/Asj+pza1PVqMYUOWVRdoKIPvA15fi2vKvwh5XsuaAe/+eC5+n1SaPPl4q/U6xU6wDdb
        ff8n+qDbkL/1fVzNodBO49W26gYVfYZtyMuLsQ91wD+r6ANuOr+V73Fg7GT18FNH3+fymK/oM226YxQq
        trWKPtgm886+t/Jiq6jTJLWrukNFn3FTeaCsv62jQn7k26Yngh6k+hXlp1HoBt8b/Ybyis/RZ95EfnK4
        gEJFPICyTasv+1sVY2a6y5+tXwuKPvsmulgx3XJFPAd79EGWzpMA+rWQxRW6zYN52zQMYk+FCnh1mzYs
        w+VXaI5Ucyr0g7/VeNK9NsxW69eONlJoMd/IvkJFH2DJvOac31dEP/mz9z4Q7Rsl8zAMLg1b7DAVfXAl
        87xFfkcN/baB8tCVaB8plb/p7avQQn715n4VfXCl8re7tyjAllcXqWhfKZW/6fFkuoV+pKIPrFRHKRYM
        wKz8qtXJKtpnSuUl8Xnlq0U2UdEHVSLPq+WBoNwrwHCmqKZuxj+hPKEjWsBfd/3yZ/RB5c5PIz+jgEF4
        FHq0H5XofIUW+EcVfUAl+qoCRsLv+0X7UokOUGjQQuo+FX04ufNEb55HHBgJ30s6XUX7VO58A565sxr0
        TRV9MLnzJSgDQjFafvPhchXtW7k7SKEBXlCgialsPff3MgoYi6VVE/uv1wfwykIozAsyRB9Izjzjghex
        AFLYWDWxetPnFArytB6lZ3/0yWo/BaT0BVV6uINH4HP/taDdVPRB5Ox7CkjN60iWnhXXC/D6CgUFeH7t
        X6vog8iVR9GzFiBy8TTZXm4/2vdy5bUE+JZVgNfpK7mCiResXE4BOXmmkdIz5K6vkFnp30Seuxsowbc6
        St7POkMxPCcjPwqONnyubldeJgwoYX71SxXtizl6VK2skIFvTu6vog2fIz8V3EsBJW2pov0xV1MVMvDS
        SiXXg/NE/ny7Qmm+AX+jivbJHPnmOzONZLC2ijZ4jnwfYV0FNMFzsUf7ZY78fiFzv2dQ8i33sxQrMqNJ
        Jd819AR/SMhzXt2qoo2dOt+74l1BNG1DVWqB1ocVtz8S8myNz6hoY6fOg0SBpvm+UslpaHhHNqFSC1R6
        kOi7FdAG71Sl1tj0VE2MfE/Av2keUNFGTt0JCmgLD+Upde/WS+2zuk4CS6oSo3/9tIRXcNA2pfZ/t5bC
        GG2noo2buivVRAW0ib9l+dtPtM+mjtfQxsjvOX1XRRs3dUxqhrY6UUX7bOq8fiLGwBP1lfrt4hucQBtt
        rkoMcbhWvVFhlNZQ0YZN3UOKlXHRVl4d6joV7bsp83HAGx5j4GvqaMOmziPbgTYr9bTwYIVR+r6KNmrK
        /qz+QQFttpmK9t/UXaAwCp6S+FIVbdSU+ZUfrxMHtNkSyvNXRftwyrwwMbM3jMIq6hYVbdSU/VABbecn
        5p4hNNqHU+YrDq/5iRHaSj2hoo2ask8poAa+dRHtwynzijrLKozQZ1W0QVPmR8WrKqAGfnUm97uFHlXP
        i9CjcLyKNmjKrlB+ZAzUwC8n36uifTlluyiM0E9UtDFT5hHEvKGOmpSY2O9oNZfCCFyvoo2ZsgMVUJNz
        VLQvp+xC5RV8MKDXqBJTyuyogJqUGED6oPKSehjQm1SJd6c2VkBNfFUQ7csp85PC1RUGtJTy/FTRxkyV
        n4aspoCa+KrgcRXt0yljGfsRWEE9paINmSr/FmGGRdRmE+XR6NE+nbJNFQbkr6MecRttyFQ9qyYooCZe
        0anEGyBbKAzISxzlXiVnhhqvgJp4Oa6rVLRPp8xvmmBAk1XuE9bvFWOwUKPpKtqnU7a9woB8dvclW7Qh
        U+XfUkzahxp5/rZon06Z1wLFgHZQud+Z8lqHTKOBGp2ion06ZbyeMwI7q9yXhCcpr0gC1GaqivbplO2p
        MKC9VO4T1lGKb1io0aEq2qdTtq/CgA5Que9h+QVPvwIE1KbECcvHIAbECQsYGiesluGEBQyNE1bLcMIC
        hsYJq2U4YQFD44TVMpywgKFxwmoZTljA0DhhtQwnLGBonLBahhMWMDROWC3jjfUXFW3IVH1d8WoOanSY
        ivbplH1eYUAHqWgjpsy/pYAaHaGifTplxykMyNO+eCrYPZTfGk/Z3mpNxeUgauVJ/HIcG25X5X83k1sC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA6Jpx4/4XAXK2rXD7ixIAAAAASUVORK5CYII=
</value>
  </data>
</root>